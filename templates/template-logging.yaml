id: select-logging-microsoft
name: Fetch Base Microsoft
if: ${{ parameters.log == 'Microsoft' }}
action: fetch:template
input:
    url: "https://github.com/RafaelTriani/poc_values"
    values:
      name: ${{ parameters.repoName }}
      owner: RafaelTriani
      description: ${{ parameters.description }}
      githubUser: ${{ parameters.githubUser }}
      projectNameSpace: ${{ parameters.projectNameSpace }}
      packageReference: | 
                          <PackageReference Include="Adapter.Microsoft" Version="1.0.3" />
      usingLogProgram: |
                          using Evertec.Extensions.Logging.Extensions.Microsoft;
      builderLogConfiguration: |
                                  builder.Logging.ClearProviders();
                                  builder.Logging.AddSinqiaLogging(GelfFormatter: false);
                                  
id: select-logging-serilog
name: Fetch Base Serilog
if: ${{ parameters.log == 'Serilog' }}
action: fetch:template
input:
    url: "https://github.com/RafaelTriani/poc_values"
    values:
      name: ${{ parameters.repoName }}
      owner: RafaelTriani
      description: ${{ parameters.description }}
      githubUser: ${{ parameters.githubUser }}
      projectNameSpace: ${{ parameters.projectNameSpace }}
      packageReference: | 
                          <PackageReference Include="Adapter.Serilog" Version="1.0.0" />
      usingLogProgram: |
                          using Evertec.Extensions.Logging.Extensions.Serilog;
      builderLogConfiguration: |
                                  builder.Host.AddSerilogImplementationPattern("Vertical", "Sistema", "Modulo");